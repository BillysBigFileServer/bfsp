syntax = "proto3";

package bfsp.files;

message EncryptedFileMetadata {
  bytes metadata = 1;
  string id = 2;
}

message FileServerMessage {
  message UploadChunk {
    ChunkMetadata chunk_metadata = 1 [deprecated = true];
    bytes chunk = 2;
    EncryptedChunkMetadata enc_chunk_metadata = 3;
  }

  message ChunksUploadedQuery { repeated string chunk_ids = 1; }

  message ListChunkMetadataQuery { repeated string ids = 1; }

  message DownloadChunkQuery { string chunk_id = 1; }

  message DeleteChunksQuery { repeated string chunk_ids = 1; }

  message Authentication { string token = 1; }

  message UploadFileMetadata { EncryptedFileMetadata encrypted_file_metadata = 1; };

  message UpdateFileMetadata { EncryptedFileMetadata encrypted_file_metadata = 1; };

  message DownloadFileMetadataQuery { string id = 1; }

  message ListFileMetadataQuery { repeated string ids = 1; }

  message DeleteFileMetadataQuery { string id = 1; }

  message GetUsageQuery {  }

  message SetMasterEncryptionKey { bytes encrypted_key = 1; }

  message GetMasterEncryptionKey { }

  Authentication auth = 1;

  oneof message {
    UploadChunk upload_chunk = 2;
    ChunksUploadedQuery chunks_uploaded_query = 3;
    DownloadChunkQuery download_chunk_query = 4;
    DeleteChunksQuery delete_chunks_query = 5;
    UploadFileMetadata upload_file_metadata = 6;
    DownloadFileMetadataQuery download_file_metadata_query = 7;
    ListFileMetadataQuery list_file_metadata_query = 8;
    ListChunkMetadataQuery list_chunk_metadata_query = 9;
    DeleteFileMetadataQuery delete_file_metadata_query = 10;
    GetUsageQuery get_usage_query = 11;
    SetMasterEncryptionKey set_master_key = 12;
    GetMasterEncryptionKey get_master_key = 13;
    UpdateFileMetadata update_file_metadata = 14;
  }
}

message UploadChunkResp { optional string err = 1; }

message DownloadChunkResp {
  message ChunkData {
    ChunkMetadata chunk_metadata = 1 [deprecated = true];
    bytes chunk = 2;
    EncryptedChunkMetadata enc_chunk_metadata = 3;
  }

  oneof response {
    ChunkData chunk_data = 1;
    string err = 2;
  }
}

message ChunksUploadedQueryResp {
  message ChunkUploaded {
    bytes chunk_id = 1;
    bool uploaded = 2;
  }

  message ChunksUploaded { repeated ChunkUploaded chunks = 1; }

  oneof response {
    ChunksUploaded chunks = 1;
    string err = 2;
  }
}

message DeleteChunksResp { optional string err = 1; }

message DeleteFileMetadataResp { optional string err = 1; }

message UploadFileMetadataResp { optional string err = 1; };

message UpdateFileMetadataResp { optional string err = 1; };

message DownloadFileMetadataResp {
  oneof response {
    EncryptedFileMetadata encrypted_file_metadata = 1;
    string err = 2;
  }
};

message ListFileMetadataResp {
  message FileMetadatas { map<string, EncryptedFileMetadata> metadatas = 1; }

  oneof response {
    FileMetadatas metadatas = 1;
    string err = 2;
  }
};

message ListChunkMetadataResp {
    message ChunkMetadatas { map<string, ChunkMetadata> metadatas = 1; }

    oneof response {
        ChunkMetadatas metadatas = 1;
        string err = 2;
    }
}

message GetUsageResp {
  message Usage {
    uint64 total_usage = 1;
    uint64 storage_cap = 2;
  }

  oneof response {
    Usage usage = 1;
    string err = 2;
  }
}

message SetMasterEncryptionKeyResp {
    optional string err = 1;
}

message GetMasterEncryptionKeyResp {
  oneof response {
    bytes encrypted_key = 1;
    string err = 2;
  }
}

message EncryptedChunkMetadata {
  string id = 1;
  bytes enc_metadata = 2;
}

message ChunkMetadata {
  string id = 1;
  bytes hash = 2;
  uint32 size = 3;
  int64 indice = 4;
  bytes nonce = 5;
}
